<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:ctrl="clr-namespace:FbLocalization.Controls"
    xmlns:local="clr-namespace:FbLocalization.Themes">

    <!--  Brushes  -->
    <SolidColorBrush x:Key="FontColorBrush" Color="#f5f6fa" />
    <SolidColorBrush x:Key="WindowBackgroundBrush" Color="#353b48" />
    <SolidColorBrush x:Key="ControlBackgroundBrush" Color="#2f3640" />
    <SolidColorBrush x:Key="SelectionBrush" Color="#7f8fa6" />
    <SolidColorBrush x:Key="BorderBrush" Color="#FF5E697C" />
    <SolidColorBrush x:Key="PressBrush" Color="#FF2E3440" />
    <SolidColorBrush x:Key="ContentBrush" Color="#232730" />
    <SolidColorBrush x:Key="HighlightedTextBrush" Color="#2ecc71" />

    <!--  Window Style  -->
    <Style
        x:Key="{x:Type ctrl:CustomWindow}"
        BasedOn="{StaticResource {x:Type Window}}"
        TargetType="{x:Type ctrl:CustomWindow}">

        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="Background" Value="{DynamicResource WindowBackgroundBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource FontColorBrush}" />
    </Style>

    <!--  Main Controls  -->

    <Style TargetType="{x:Type TextBox}">
        <Setter Property="Foreground" Value="{DynamicResource FontColorBrush}" />
        <Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}" />
        <Setter Property="SelectionBrush" Value="{DynamicResource SelectionBrush}" />
    </Style>

    <Style TargetType="{x:Type ListView}">
        <Setter Property="BorderThickness" Value="0.5" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource FontColorBrush}" />
        <Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}" />
    </Style>

    <Style TargetType="{x:Type ListViewItem}">
        <Setter Property="BorderThickness" Value="0.5" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource FontColorBrush}" />
        <Setter Property="Background" Value="{DynamicResource WindowBackgroundBrush}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <GridViewRowPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource PressBrush}" />
                        </Trigger>

                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="{DynamicResource PressBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type GridViewColumnHeader}">
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                    <Border
                        Background="Transparent"
                        BorderBrush="{DynamicResource ContentBrush}"
                        BorderThickness="1,0,0,1">
                        <TextBlock
                            x:Name="ContentHeader"
                            Padding="4"
                            Text="{TemplateBinding Content}"
                            TextAlignment="Left" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="{DynamicResource FontColorBrush}" />
    </Style>

    <Style TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{DynamicResource FontColorBrush}" />
        <Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
        <Setter Property="MinWidth" Value="100" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter
                            Margin="2"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Content="{TemplateBinding Content}"
                            RecognizesAccessKey="True" />
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource WindowBackgroundBrush}" />
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{DynamicResource PressBrush}" />
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>